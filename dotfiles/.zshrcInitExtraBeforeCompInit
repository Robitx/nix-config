autoload -U colors && colors # colors
autoload -U zsh-mime-setup zsh-mime-setup  # run everything as if it's an executable
autoload -U select-word-style && select-word-style bash # ctrl+w on words


########################################################################
# git support
########################################################################
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' check-for-changes false
zstyle ':vcs_info:*' formats "%{$fg[yellow]%}%c%{$fg[green]%}%u%{$reset_color%} [%{$fg[blue]%}%b%{$reset_color%}] %{$fg[yellow]%}%s%{$reset_color%}:%r"
precmd() {  # run before each prompt
    vcs_info
}

DISABLE_UNTRACKED_FILES_DIRTY="true"

########################################################################
# Prompt
########################################################################
setopt PROMPT_SUBST     # allow funky stuff in prompt
_newline=$'\n'
_lineup=$'\e[1A'
_linedown=$'\e[1B'

prompt="
%{$fg[red]%}%n@%m:%{$reset_color%}%{$fg[yellow]%}%~%{$reset_color%} %{$fg[blue]%}[%*]%{$reset_color%}
%{$fg[yellow]%}$%{$reset_color%}"
RPROMPT='%{${_lineup}%}${vim_mode} ${vcs_info_msg_0_}%{${_linedown}%}'
# prompt="%{$fg[yellow]%}$ %{$reset_color%}"

########################################################################
# Vi mode setup
########################################################################
bindkey -v      # vi mode
vim_ins_mode="%{$fg[yellow]%}[INS]%{$reset_color%}"
vim_cmd_mode="%{$fg[cyan]%}[CMD]%{$reset_color%}"
vim_mode=$vim_ins_mode

function zle-keymap-select {
    vim_mode="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
    zle reset-prompt
}
zle -N zle-keymap-select

function zle-line-finish {
    vim_mode=$vim_ins_mode
}
zle -N zle-line-finish

export KEYTIMEOUT=1

bindboth() {
    bindkey -M viins "$@"
    bindkey -M vicmd "$@"
}

# Use vim cli mode
bindkey '^P' up-history
bindkey '^N' down-history

# backspace and ^h working even after
# returning from command mode
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char

# ctrl-w removed word backwards
bindkey '^w' backward-kill-word

# ctrl-r starts searching history backward
# bindkey '^r' history-incremental-search-backward

# delete
bindboth "^[[3~" delete-char
bindboth "^[3~" delete-char

# home
bindboth "^[[7~" beginning-of-line
bindboth "^[[1~" beginning-of-line
bindboth "^[[H"  beginning-of-line
bindboth "^[OH"  beginning-of-line
# end
bindboth "^[[8~" end-of-line
bindboth "^[[4~" end-of-line
bindboth "^[[F"  end-of-line
bindboth "^[OF"  end-of-line

########################################################################
# Some settings
########################################################################
setopt auto_cd                  # if command is a path, cd into it
setopt auto_remove_slash        # self explicit
setopt chase_links              # resolve symlinks
setopt correct                  # try to correct spelling of commands
setopt extended_glob            # activate complex pattern globbing
setopt glob_dots                # include dotfiles in globbing
# setopt print_exit_value         # print return value if non-zero
unsetopt beep                   # no bell on error
unsetopt bg_nice                # no lower prio for background jobs
unsetopt clobber                # must use >| to truncate existing files
unsetopt hist_beep              # no bell on error in history
unsetopt hup                    # no hup signal at shell exit
unsetopt ignore_eof             # do not exit on end-of-file
unsetopt list_beep              # no bell on ambiguous completion
unsetopt rm_star_silent         # ask for confirmation for `rm *' or `rm path/*'
# setxkbmap -option compose:ralt  # compose-key
print -Pn "\e]0; %n@%M: %~\a"   # terminal titlevi mode setup

tp=$(head -n 1 /persist/myconfs/tp)
openai_api_key=$(head -n 1 /persist/myconfs/openai_api_key)
googleai_api_key=$(head -n 1 /persist/myconfs/googleai_api_key)
pplx_api_key=$(head -n 1 /persist/myconfs/pplx_api_key)
pt="j1eKzixwAeCksQ1SKi-1"
wc="/backup/rtcka/webadmins_certs/tibor.schmidt.crt,/backup/rtcka/webadmins_certs/tibor.schmidt.key"
